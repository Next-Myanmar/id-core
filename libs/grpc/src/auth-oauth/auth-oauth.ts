// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.0.3
//   protoc               v5.27.3
// source: protos/auth-oauth.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";

export const protobufPackage = "auth.oauth";

export interface AuthenticateRequest {
  clientId: string;
  clientSecret: string;
  authorization: string;
}

export interface Profile {
  email?: string | undefined;
  firstName?: string | undefined;
  lastName?: string | undefined;
}

export interface AuthOauthUser {
  userId: string;
  profile: Profile | undefined;
}

export const AUTH_OAUTH_PACKAGE_NAME = "auth.oauth";

export interface AuthOauthServiceClient {
  authenticate(request: AuthenticateRequest): Observable<AuthOauthUser>;
}

export interface AuthOauthServiceController {
  authenticate(request: AuthenticateRequest): Promise<AuthOauthUser> | Observable<AuthOauthUser> | AuthOauthUser;
}

export function AuthOauthServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["authenticate"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AuthOauthService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AuthOauthService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AUTH_OAUTH_SERVICE_NAME = "AuthOauthService";
