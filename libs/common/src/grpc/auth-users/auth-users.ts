// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v1.181.1
//   protoc               v5.27.3
// source: protos/auth-users.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from '@nestjs/microservices';
import { Observable } from 'rxjs';

export const protobufPackage = 'auth.users';

export enum TokenType {
  Normal = 0,
  ActivateUser = 1,
  UNRECOGNIZED = -1,
}

export interface GenerateTokenPairRequest {
  userId: string;
  userAgentId: string;
  accessTokenLifetime: number;
  tokenType: TokenType;
  refreshTokenLifetime?: number | undefined;
}

export interface GenerateTokenPairResponse {
  accessToken: string;
  refreshToken: string;
}

export const AUTH_USERS_PACKAGE_NAME = 'auth.users';

export interface AuthUsersServiceClient {
  generateTokenPair(
    request: GenerateTokenPairRequest,
  ): Observable<GenerateTokenPairResponse>;
}

export interface AuthUsersServiceController {
  generateTokenPair(
    request: GenerateTokenPairRequest,
  ):
    | Promise<GenerateTokenPairResponse>
    | Observable<GenerateTokenPairResponse>
    | GenerateTokenPairResponse;
}

export function AuthUsersServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ['generateTokenPair'];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcMethod('AuthUsersService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(
        constructor.prototype,
        method,
      );
      GrpcStreamMethod('AuthUsersService', method)(
        constructor.prototype[method],
        method,
        descriptor,
      );
    }
  };
}

export const AUTH_USERS_SERVICE_NAME = 'AuthUsersService';
